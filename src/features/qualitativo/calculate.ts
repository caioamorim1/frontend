import { Answer, Question } from "./types";



export function calculateQuestionScore(questions: Question[], answers: Answer[]): number {
    if (!answers || answers.length === 0) return 0;

    let totalScore = 0;

    answers.forEach((ans) => {
        if (ans.value === null || ans.value === undefined) return;

        // üîç Encontrar a pergunta correspondente
        const question = questions.find((q) => q.id === ans.questionId);
        if (!question) return;

        // üîç Encontrar o peso da op√ß√£o escolhida (para m√∫ltipla escolha ou sim/n√£o)
        const selectedOption = question.options?.find(
            (o) => o.label.toLowerCase() === String(ans.value).toLowerCase()
        );

        // Se for "sim-nao-na" ou "multipla-escolha"
        let optionWeight = selectedOption?.weight ?? 0;

        // Se for tipo n√∫mero ‚Äî converte para percentual (ex: nota de 0‚Äì10 vira 0‚Äì100)
        if (question.type === 'numero' && typeof ans.value === 'number') {
            optionWeight = Math.min(100, Math.max(0, (ans.value / 10) * 100));
        }

        // Tipos texto ou data n√£o entram no c√°lculo
        if (['texto', 'data'].includes(question.type)) return;

        // üíØ C√°lculo ponderado
        const weightedScore = optionWeight * question.weight;
        totalScore += weightedScore;

        console.log(
            `Quest√£o ${question.id}: op√ß√£o "${ans.value}" => pesoOp√ß√£o=${optionWeight}, pesoQuest√£o=${question.weight}, score=${weightedScore}`
        );
    });

    console.log('‚úÖ Total calculado:', totalScore);
    return totalScore;
}
